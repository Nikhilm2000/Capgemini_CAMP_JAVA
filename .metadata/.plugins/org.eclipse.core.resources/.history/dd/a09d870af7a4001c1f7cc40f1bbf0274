package com.capgemini.day5;

import java.util.LinkedList; 
import java.util.Scanner;
import java.util.Stack;


class Employee {
	int id;
	String name;
	Double Salary;
	String Department;

	public Employee() {

	}

	public Employee(int id, String name, Double salary, String department) {
		super();
		this.id = id;
		this.name = name;
		Salary = salary;
		Department = department;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Double getSalary() {
		return Salary;
	}

	public void setSalary(Double salary) {
		Salary = salary;
	}

	public String getDepartment() {
		return Department;
	}

	public void setDepartment(String department) {
		Department = department;
	}

	public String toString() {
		return "[----Name----:" + name + "" + "----id----:" + id + "" + "----Salary----:" + Salary + ""
				+ "----Department----:" + Department + "]";
	}
}

public class MyLinkedList {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		LinkedList<Employee> list = new LinkedList<Employee>();
		list.addFirst(new Employee(101, "Nikhil", 39000.0, "Cloud"));
		list.add(new Employee(102, "Pavan", 28000.0, "FullStack"));
		list.add(new Employee(103, "Mallik", 54000.0, "Developer"));
		list.add(new Employee(104, "Zulfi", 2800.0, "Testing"));
		list.add(new Employee(105, "Arjun", 2400.0, "Quality"));
		list.add(new Employee(106, "Sharma", 1900.0, "Sales"));
		list.add(new Employee(107, "Rahul", 3400.0, "Technical"));
		list.add(new Employee(108, "Bharath", 2200.0, "Support"));

		for (Employee e : list)
			System.out.println(e);

		
		//list.get get value with index
		System.out.println(list.get(2));
		
		//list.poll
		System.out.println(list.poll());
		
		//remove
		list.remove(0);
		list.removeFirst();
		list.removeLast();
		
		//list.size
		System.out.println(list.size());
		
		//list sublist
		System.out.println(list.subList(0, 2));
		
		//display
		for (Employee e : list)
			System.out.println(e);

		Stack<Integer> stack=new Stack<Integer>();
		stack.add(24);
		stack.add(4);
		stack.add(68);
		stack.add(22);
		stack.add(9);
		
		System.out.println(stack);
		System.out.println(stack.capacity());
	}
}
